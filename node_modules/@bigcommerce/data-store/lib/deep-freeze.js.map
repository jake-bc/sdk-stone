{"version":3,"file":"deep-freeze.js","sourceRoot":"","sources":["../src/deep-freeze.ts"],"names":[],"mappings":";;AAAA,iCAAuC;AAKvC,oBAAsC,MAAe;IACjD,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAa,CAAC,MAAM,CAAC,CAAC,EAAE;QAC/E,OAAO,MAAM,CAAC;KACjB;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;KAChE;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG;QACvE,MAAM,CAAC,GAAc,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAc,CAAC,CAAC,CAAC;QAE5D,OAAO,MAAM,CAAC;IAClB,CAAC,EAAE,EAAO,CAAC,CAAC,CAAC;AACjB,CAAC;AAdD,6BAcC","sourcesContent":["import { isPlainObject } from 'lodash';\n\nexport default function deepFreeze<T>(object: T[]): ReadonlyArray<T>;\nexport default function deepFreeze<T extends object>(object: T): Readonly<T>;\nexport default function deepFreeze<T>(object: T): T;\nexport default function deepFreeze<T>(object: T[] | T): ReadonlyArray<T> | Readonly<T> | T {\n    if (Object.isFrozen(object) || (!Array.isArray(object) && !isPlainObject(object))) {\n        return object;\n    }\n\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map(value => deepFreeze(value)));\n    }\n\n    return Object.freeze(Object.getOwnPropertyNames(object).reduce((result, key) => {\n        result[key as keyof T] = deepFreeze(object[key as keyof T]);\n\n        return result;\n    }, {} as T));\n}\n"]}