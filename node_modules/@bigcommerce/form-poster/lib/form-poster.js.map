{"version":3,"file":"form-poster.js","sourceRoot":"","sources":["../src/form-poster.ts"],"names":[],"mappings":";;AAEA;IAII,oBACY,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAClC,CAAC;IAEJ,6BAAQ,GAAR,UAAS,GAAW,EAAE,IAA4B,EAAE,QAAqB;QACrE,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAEhD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC9B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAEnD,IAAI,QAAQ,EAAE;gBACV,QAAQ,EAAE,CAAC;aACd;QACL,CAAC,CAAC,CAAC;QAGH,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IACL,iBAAC;AAAD,CAAC,AAxBD,IAwBC","sourcesContent":["import FormBuilder from './form-builder';\n\nexport default class FormPoster {\n    /**\n     * @internal\n     */\n    constructor(\n        private _formBuilder: FormBuilder\n    ) {}\n\n    postForm(url: string, data: { [key: string]: any }, callback?: () => void): void {\n        const form = this._formBuilder.build(url, data);\n\n        window.addEventListener('unload', function handleUnload() {\n            window.removeEventListener('unload', handleUnload);\n\n            if (callback) {\n                callback();\n            }\n        });\n\n        // In order to submit the form, the form must be attached to DOM.\n        document.body.appendChild(form);\n        form.submit();\n        document.body.removeChild(form);\n    }\n}\n"]}